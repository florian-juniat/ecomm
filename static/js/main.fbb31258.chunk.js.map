{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","test","setTest","userName","setUserName","userPass","setUserPass","token","setToken","userNameRegister","setUserNameRegister","userPassRegister","setUserPassRegister","className","type","value","onChange","event","target","onClick","axios","post","name","password","then","res","console","log","data","catch","error","response","get","headers","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAe,I,4BCuIAA,MAjIf,WAAgB,IAAD,EAGWC,mBAAS,WAHpB,mBAGNC,EAHM,KAGAC,EAHA,OAImBF,mBAAS,IAJ5B,mBAING,EAJM,KAIIC,EAJJ,OAKmBJ,mBAAS,IAL5B,mBAKNK,EALM,KAKIC,EALJ,OAMaN,mBAAS,IANtB,mBAMNO,EANM,KAMCC,EAND,OAQmCR,mBAAS,IAR5C,mBAQNS,EARM,KAQYC,EARZ,OASmCV,mBAAS,IAT5C,mBASNW,EATM,KASYC,EATZ,KA2Eb,OACE,qBAAKC,UAAU,MAAf,SACE,sBAAKA,UAAU,UAAf,UACE,wBAAQA,UAAU,aAAlB,SACI,oBAAIA,UAAU,QAAd,0BAIJ,sBAAKA,UAAU,aAAf,UACE,sBAAKA,UAAU,SAAf,UACE,oBAAIA,UAAU,eAAd,mBACA,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,sBACA,uBAAOA,UAAU,UAAUC,KAAK,OAAOC,MAAOZ,EAAUa,SA/B5C,SAACC,GACvBb,EAAYa,EAAMC,OAAOH,aAgCjB,sBAAKF,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,sBACA,uBAAOA,UAAU,UAAUC,KAAK,OAAOC,MAAOV,EAAUW,SA/B5C,SAACC,GACvBX,EAAYW,EAAMC,OAAOH,aAgCjB,wBAAQF,UAAU,aAAaM,QApEhB,WACvBC,IAAMC,KAAK,oDAAqD,CAC9DC,KAAMnB,EACNoB,SAAUlB,IACTmB,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZjB,EAASiB,EAAIG,MACb1B,EAAQ,yBACT2B,OAAM,SAAUC,GACbA,EAAMC,UACR7B,EAAQ,0BA0DJ,wBAMF,sBAAKW,UAAU,SAAf,UACE,oBAAIA,UAAU,eAAd,qBACA,sBAAKA,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,sBACA,uBAAOA,UAAU,UAAUC,KAAK,OAAOC,MAAON,EAAkBO,SAvC5C,SAACC,GAC/BP,EAAoBO,EAAMC,OAAOH,aAwCzB,sBAAKF,UAAU,iBAAf,UACE,oBAAIA,UAAU,aAAd,sBACA,uBAAOA,UAAU,UAAUC,KAAK,OAAOC,MAAOJ,EAAkBK,SAvC5C,SAACC,GAC/BL,EAAoBK,EAAMC,OAAOH,aAwCzB,wBAAQF,UAAU,aAAaM,QApEb,WAC1BC,IAAMC,KAAK,uDAAwD,CACjEC,KAAMb,EACNc,SAAUZ,IACTa,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZvB,EAAQ,2BACT2B,OAAM,SAAUC,GACbA,EAAMC,WACRL,QAAQC,IAAIG,EAAMC,UAClB7B,EAAQ,6BA0DJ,2BAQJ,wBAAQW,UAAU,aAAaM,QA3GjB,WAClBC,IAAMY,IAAI,qDAAsD,CAACC,QAAS,CACxE,cAAiB1B,KAEhBiB,MAAK,SAAAC,GACJC,QAAQC,IAAIF,GACZvB,EAAQuB,EAAIG,KAAKN,SAChBO,OAAM,SAAUC,GACbA,EAAMC,UACR7B,EAAQ,qBAkGV,+BAGA,mBAAGW,UAAU,MAAb,SAAoBZ,IACpB,mBAAGY,UAAU,MAAb,SAA6B,IAATN,EAAc,GAAK,oBCpHhC2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.fbb31258.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport { useState } from 'react';\nimport axios from 'axios';\n\n\nfunction App() {\n\n  \n  const [test, setTest] = useState(\"Nothing\")\n  const [userName, setUserName] = useState(\"\")\n  const [userPass, setUserPass] = useState(\"\")\n  const [token, setToken] = useState(\"\")\n\n  const [userNameRegister, setUserNameRegister] = useState(\"\")\n  const [userPassRegister, setUserPassRegister] = useState(\"\")\n\n  const handleClick = () => {\n    axios.get('https://back-ecommerce01.herokuapp.com/auth/verify', {headers: {\n      'Authorization': token }\n    })\n      .then(res => {\n        console.log(res)\n        setTest(res.data.name);\n      }).catch(function (error) {\n        if (error.response) {\n          setTest(\"Not Connected\");\n        }\n      });\n  }\n\n\n  const handleClickLogin = () => {\n    axios.post('https://back-ecommerce01.herokuapp.com/auth/login', {\n      name: userName,\n      password: userPass\n    }).then(res => {\n        console.log(res)\n        setToken(res.data)\n        setTest(\"Succeed Connection\");\n    }).catch(function (error) {\n      if (error.response) {\n        setTest(\"Connection Refused\");\n      }\n    });\n  }\n\n\n  const handleClickRegister = () => {\n    axios.post('https://back-ecommerce01.herokuapp.com/auth/register', {\n      name: userNameRegister,\n      password: userPassRegister\n    }).then(res => {\n        console.log(res)\n        setTest(\"Succeed Registration\");\n    }).catch(function (error) {\n      if (error.response) {\n        console.log(error.response)\n        setTest(\"Registration Refused\");\n      }\n    });\n  }\n\n  const handleWriteUser = (event) => {\n    setUserName(event.target.value);\n  }\n\n  const handleWritePass = (event) => {\n    setUserPass(event.target.value);\n  }\n\n  const handleWriteUserRegister = (event) => {\n    setUserNameRegister(event.target.value);\n  }\n\n  const handleWritePassRegister = (event) => {\n    setUserPassRegister(event.target.value);\n  }\n\n  \n\n  return (\n    <div className=\"App\">\n      <div className=\"mainBox\">\n        <header className=\"App-header\">\n            <h1 className=\"title\">E-commerce</h1>\n        </header>\n\n\n        <div className=\"handleLine\">\n          <div className=\"mybody\">\n            <h2 className=\"titleSection\">Login</h2>\n            <div className=\"containerInput\">\n              <h2 className=\"titleInput\">Username</h2>\n              <input className=\"myInput\" type=\"text\" value={userName} onChange={handleWriteUser} />\n            </div>\n            <div className=\"containerInput\">\n              <h2 className=\"titleInput\">Password</h2>\n              <input className=\"myInput\" type=\"text\" value={userPass} onChange={handleWritePass} />\n            </div>\n            <button className=\"ButtonTest\" onClick={handleClickLogin}>\n                Sign in\n            </button>\n            \n          </div>\n\n          <div className=\"mybody\">\n            <h2 className=\"titleSection\">Sign Up</h2>\n            <div className=\"containerInput\">\n              <h2 className=\"titleInput\">Username</h2>\n              <input className=\"myInput\" type=\"text\" value={userNameRegister} onChange={handleWriteUserRegister} />\n            </div>\n            <div className=\"containerInput\">\n              <h2 className=\"titleInput\">Password</h2>\n              <input className=\"myInput\" type=\"text\" value={userPassRegister} onChange={handleWritePassRegister} />\n            </div>\n            <button className=\"ButtonTest\" onClick={handleClickRegister}>\n                Sign up\n            </button>\n            \n          </div>\n        </div>\n\n\n        <button className=\"ButtonTest\" onClick={handleClick}>\n              Verify Connection\n          </button>\n        <p className=\"myP\">{test}</p>\n        <p className=\"myP\">{token == \"\" ? \"\" : \"Connected\"}</p>\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}